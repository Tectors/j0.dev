<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
                    xmlns:core="using:FluentAvalonia.Core"
                    x:CompileBindings="True">
    <Design.PreviewWith>
        <Border Padding="10">
            <ui:ContentDialog Title="Title"
                              Content="Content goes here"
                              core:VisualStateHelper.ForcedClassesProperty=":open"/>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type ui:ContentDialog}" TargetType="ui:ContentDialog">
        <Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ContentDialogABackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContentDialogABorderBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="Container">
                    <Panel Name="LayoutRoot"
                           Background="{DynamicResource ContentDialogSmokeFill}">
                        <Border Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="400"
                                MaxWidth="{DynamicResource ContentDialogMaxWidth}"
                                MinHeight="{DynamicResource ContentDialogMinHeight}"
                                MaxHeight="{DynamicResource ContentDialogMaxHeight}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" Margin="100"
                                Effect="drop-shadow(0 8 32 #66000000)"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}">
                            <!-- Even in WinUI, shadow is always black regardless of light/dark mode -->

                            <!-- if this border isn't here, dialog space displays outside of corner radius at top
                                 if we put ClipToBounds=True on BackgroundElement above, it clips the shadow -->
                            <Border ClipToBounds="True"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid Name="DialogSpace" ClipToBounds="True"
                                  RowDefinitions="*,Auto">
                                    <ScrollViewer Name="ContentScrollViewer"
                                                  HorizontalScrollBarVisibility="Disabled"
                                                  VerticalScrollBarVisibility="Auto">
                                        <Border
                                                Padding="25"
                                                BorderThickness="{StaticResource ContentDialogSeparatorThickness}"
                                                BorderBrush="{DynamicResource ContentDialogSeparatorBorderBrush}">
                                            <Grid RowDefinitions="Auto,*" >
                                                <Grid.Styles>
                                                    <!--Make sure text wrapping is on-->
                                                    <Style Selector="TextBlock">
                                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                                    </Style>
                                                </Grid.Styles>
                                                <ContentControl Name="Title"
                                                                Margin="0 0 0 13"
                                                                Content="{TemplateBinding Title}"
                                                                ContentTemplate="{TemplateBinding TitleTemplate}"
                                                                FontSize="23"
                                                                FontFamily="Default"
                                                                FontWeight="Bold"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                    <ContentControl.Template>
                                                        <ControlTemplate>
                                                            <ContentPresenter Content="{TemplateBinding Content}"
                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </ControlTemplate>
                                                    </ContentControl.Template>
                                                </ContentControl>

                                                <ContentPresenter Name="Content"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Content="{TemplateBinding Content}"
                                                                  FontSize="18"
                                                                  Opacity="0.5"
                                                                  FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                                                  Foreground="{TemplateBinding Foreground}"
                                                                  Grid.Row="1"/>
                                            </Grid>
                                        </Border>
                                    </ScrollViewer>

                                    <Border Grid.Row="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom"
                                            BorderThickness="0 1 0 0"
                                            Padding="0 15 0 15">
                                        <StackPanel Name="CommandSpace" Spacing="10" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 15 0">
                                            <Button Name="SecondaryButton"
                                                    Content="{TemplateBinding SecondaryButtonText}"
                                                    IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
                                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Cursor="Hand"
                                                    Background="{DynamicResource ContentDialogBlackButtonBackground}"
                                                    Padding="20 8"
                                                    BorderBrush="{DynamicResource ContentDialogBlackButtonBorderBrush}"
                                                    FontWeight="Medium"
                                                    FontSize="15"
                                                    BorderThickness="1"
                                                    IsVisible="False">
                                                <Button.Resources>
                                                    <ResourceDictionary>
                                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver">#1C1C1C</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBorderBrushPointerOver">#3E3E3E</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver">White</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonBackgroundPressed">#141414</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBorderBrushPressed">#2A2A2A</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPressed">White</SolidColorBrush>
                                                    </ResourceDictionary>
                                                </Button.Resources>
                                                
                                            </Button>

                                            <Button Name="CloseButton"
                                                    Content="{TemplateBinding CloseButtonText}"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    Cursor="Hand"
                                                    Background="{DynamicResource ContentDialogBlackButtonBackground}"
                                                    Padding="20 8"
                                                    BorderBrush="{DynamicResource ContentDialogBlackButtonBorderBrush}"
                                                    FontWeight="Medium"
                                                    FontSize="15"
                                                    BorderThickness="1"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    IsVisible="False">
                                                
                                                <Button.Resources>
                                                    <ResourceDictionary>
                                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver">#1C1C1C</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBorderBrushPointerOver">#3E3E3E</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver">White</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonBackgroundPressed">#141414</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBorderBrushPressed">#2A2A2A</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPressed">White</SolidColorBrush>
                                                    </ResourceDictionary>
                                                </Button.Resources>
                                            </Button>
                                            
                                            <Button Name="PrimaryButton"
                                                    Content="{TemplateBinding PrimaryButtonText}"
                                                    IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
                                                    HorizontalAlignment="Stretch"
                                                    FontWeight="Bold"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalContentAlignment="Center"
                                                    Background="White"
                                                    Cursor="Hand"
                                                    IsDefault="{TemplateBinding IsPrimaryButtonEnabled}"
                                                    Foreground="{DynamicResource ContentDialogBackground}"
                                                    VerticalContentAlignment="Center"
                                                    FontSize="15"
                                                    Padding="20 8"
                                                    IsVisible="False">
                                                <Button.Resources>
                                                    <ResourceDictionary>
                                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver">White</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver">#0f0f10</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBackgroundPressed">#E0E0E0</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPressed">#0f0f10</SolidColorBrush>
                                                    </ResourceDictionary>
                                                </Button.Resources>
                                            </Button>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </Border>
                        </Border>
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>

        <!--Handle hidden dialog-->
        <Style Selector="^:hidden /template/ Panel#LayoutRoot">
            <Style.Animations>
                <Animation Duration="00:00:00.167" FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="1.0"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="0.0"/>
                        <Setter Property="IsVisible" Value="False" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="^:hidden /template/ Border#Container">
            <Style.Animations>
                <Animation Duration="00:00:00.167" FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%" KeySpline="0,0 0,1">
                        <Setter Property="ScaleTransform.ScaleX" Value="1.05"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="1.05"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <!--Handle open dialog-->
        <Style Selector="^:open /template/ Panel#LayoutRoot">
            <Setter Property="IsVisible" Value="True"/>
            <Style.Animations>
                 <!--Animation applies with priority of LocalValue
                 To overrule the IsVisible=False in :hidden, set
                 IsVisible=True in BOTH KeyFrames here--> 
                <Animation Duration="00:00:00.250" FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="IsVisible" Value="True"/>
                        <Setter Property="Opacity" Value="0.0"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="IsVisible" Value="True"/>
                        <Setter Property="Opacity" Value="1.0"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="^:open /template/ Border#Container">
            <Style.Animations>
                <Animation Duration="00:00:00.250" FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleX" Value="1.05"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="1.05"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%" KeySpline="0,0 0,1">
                        <Setter Property="ScaleTransform.ScaleX" Value="1.00"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="1.00"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <!--Handle showing smoke layer-->
        <Style Selector="^:nosmokelayer /template/ Panel#LayoutRoot">
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>

        <!--Handle FullDialogSizing-->
        <Style Selector="^:fullsize /template/ Border#BackgroundElement">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        
        <!-- Primary Button Only -->
        <Style Selector="^:primary /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
        </Style>
        <Style Selector="^:primary /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:primary /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>

        <!-- Secondary Button Only -->
        <Style Selector="^:secondary /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:secondary /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
        </Style>
        <Style Selector="^:secondary /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>

        <!-- Close Button Only -->
        <Style Selector="^:close /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:close /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:close /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
        </Style>

        <!-- Margins are defined by ContentDialogButtonSpacing (8) -->

        <!-- Primary and Secondary -->
        <Style Selector="^:primary:secondary /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="0 0 4 0" />
        </Style>
        <Style Selector="^:primary:secondary /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="4 0 0 0" />
        </Style>
        <Style Selector="^:primary:secondary /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>

        <!-- Primary and Close Buttons -->
        <Style Selector="^:primary:close /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="0 0 4 0" />
        </Style>
        <Style Selector="^:primary:close /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:primary:close /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="4 0 0 0" />
        </Style>

        <!-- Primary and Secondary Buttons -->
        <Style Selector="^:primary:secondary /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="0 0 4 0" />
        </Style>
        <Style Selector="^:primary:secondary /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:primary:secondary /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="4 0 0 0" />
        </Style>

        <!-- Secondary and Close Buttons -->
        <Style Selector="^:secondary:close /template/ Button#Secondary">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="0 0 4 0" />
        </Style>
        <Style Selector="^:secondary:close /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^:secondary:close /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="4 0 0 0" />
        </Style>


        <!-- All Buttons -->
        <Style Selector="^:primary:secondary:close /template/ Button#PrimaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Grid.ColumnSpan" Value="1" />
            <Setter Property="Margin" Value="0 0 4 0" />
        </Style>
        <Style Selector="^:primary:secondary:close /template/ Button#SecondaryButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Grid.ColumnSpan" Value="2" />
            <Setter Property="Margin" Value="4 0 4 0" />
        </Style>
        <Style Selector="^:primary:secondary:close /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Grid.Column" Value="3" />
            <Setter Property="Grid.ColumnSpan" Value="1" />
            <Setter Property="Margin" Value="4 0 0 0" />
        </Style>
    </ControlTheme>
</ResourceDictionary>